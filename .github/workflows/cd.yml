name: CI/CD Main

on:
  push:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint

  unit-tests:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Unit tests
        run: npm run test:unit

  integration-tests:
    runs-on: ubuntu-latest
    needs: [unit-tests]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build Docker image (local tag)
        run: docker build -t hello-world-service:local .

      - name: Run container for integration tests
        run: docker run -d --name integration -p 3000:3000 hello-world-service:local

      - name: Integration tests
        run: npm run test:integration

      - name: Stop container
        run: |
          docker stop integration
          docker rm integration

  build-and-push:
    runs-on: ubuntu-latest
    needs: [integration-tests]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set version
        id: version
        run: |
          echo "IMAGE_VERSION=0.0.${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Build & push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/hello-world-service:${{ steps.version.outputs.IMAGE_VERSION }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/hello-world-service:${{ steps.version.outputs.IMAGE_VERSION }}
